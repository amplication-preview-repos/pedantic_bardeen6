/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DataSet as PrismaDataSet } from "@prisma/client";

export class DataSetServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DataSetCountArgs, "select">): Promise<number> {
    return this.prisma.dataSet.count(args);
  }

  async dataSets<T extends Prisma.DataSetFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataSetFindManyArgs>
  ): Promise<PrismaDataSet[]> {
    return this.prisma.dataSet.findMany<Prisma.DataSetFindManyArgs>(args);
  }
  async dataSet<T extends Prisma.DataSetFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataSetFindUniqueArgs>
  ): Promise<PrismaDataSet | null> {
    return this.prisma.dataSet.findUnique(args);
  }
  async createDataSet<T extends Prisma.DataSetCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataSetCreateArgs>
  ): Promise<PrismaDataSet> {
    return this.prisma.dataSet.create<T>(args);
  }
  async updateDataSet<T extends Prisma.DataSetUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataSetUpdateArgs>
  ): Promise<PrismaDataSet> {
    return this.prisma.dataSet.update<T>(args);
  }
  async deleteDataSet<T extends Prisma.DataSetDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DataSetDeleteArgs>
  ): Promise<PrismaDataSet> {
    return this.prisma.dataSet.delete(args);
  }
}
