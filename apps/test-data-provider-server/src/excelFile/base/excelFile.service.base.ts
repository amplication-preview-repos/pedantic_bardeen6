/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ExcelFile as PrismaExcelFile } from "@prisma/client";

export class ExcelFileServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ExcelFileCountArgs, "select">
  ): Promise<number> {
    return this.prisma.excelFile.count(args);
  }

  async excelFiles<T extends Prisma.ExcelFileFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExcelFileFindManyArgs>
  ): Promise<PrismaExcelFile[]> {
    return this.prisma.excelFile.findMany<Prisma.ExcelFileFindManyArgs>(args);
  }
  async excelFile<T extends Prisma.ExcelFileFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExcelFileFindUniqueArgs>
  ): Promise<PrismaExcelFile | null> {
    return this.prisma.excelFile.findUnique(args);
  }
  async createExcelFile<T extends Prisma.ExcelFileCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExcelFileCreateArgs>
  ): Promise<PrismaExcelFile> {
    return this.prisma.excelFile.create<T>(args);
  }
  async updateExcelFile<T extends Prisma.ExcelFileUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExcelFileUpdateArgs>
  ): Promise<PrismaExcelFile> {
    return this.prisma.excelFile.update<T>(args);
  }
  async deleteExcelFile<T extends Prisma.ExcelFileDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ExcelFileDeleteArgs>
  ): Promise<PrismaExcelFile> {
    return this.prisma.excelFile.delete(args);
  }
}
